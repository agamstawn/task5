c
ConfirmationMailer.confirm_email("to asjhkj@ks.com"),"1234567890"
ConfirmationMailer.confirm_email
ConfirmationMailer
@user
user
c
page_comment.row(no_row)[1]
page_comment.row(no_row)[3]
page_comment.row(no_row)[2]
@article.id
(2..page_comment.last_row).each do |no_row| @comments = Comment.create(article_id: @article.id, user_id: page_comment.row(no_row)[2], content: page_comment.row(no_row)[3]) end
(2..page_comment.last_row).each do |no_row| @comments = Comment.create(article_id: @article.id, user_id: page_comment.row(no_row)[2], content: page_comment.row(no_row)[3])
page_comment
    article.save
      debugger 
  content: page_comment.row(no_row)[3]) 
  user_id: page_comment.row(no_row)[2], 
  article_id: @article.id, 
  @comments = Comment.create(
(2..page_comment.last_row).each do |no_row| 
@comments
c
(2..page_article.last_row).each do |no_row| @article = Article.create(title: page_article.row(no_row)[0], content: page_article.row(no_row)[1], status: page_article.row(no_row)[2]) end
page_article.row(1)
c
page_article.row(1)
spreadsheet.sheet('Article')
article
spreadsheet.sheet('Article')
(2..page_article.last_row).each do |no_row| @article = Article.create(title: page_article.row(no_row)[0], content: page_article.row(no_row)[1], status: page_article.row(no_row)[2]) end
page_article
c
cc
(2..page_article.last_row).each do |no_row| @article = Article.create(title: page_article.row(no_row)[0], content: page_article.row(no_row)[1], status: page_article.row(no_row)[2], article_id: @article.id) end
@article.id
(2..page_article.last_row).each do |no_row| @article = Article.create(title: page_article.row(no_row)[0], content: page_article.row(no_row)[1], status: page_article.row(no_row)[2]) end
(2..page_article.last_row).each do |no_row| puts page_article.row(no_row)[2] end
(2..page_article.last_row).each do |no_row| puts page_article.row(no_row)[3] end
(2..page_article.last_row).each do |no_row| puts page_article.row(no_row)[1] end
(2..page_article.last_row).each do |no_row| puts page_article.row(no_row)[0] end
(2..page_article.last_row).each do |no_row| puts page_article.row(no_row)[1] end
(2..page_article.last_row).each do |no_row| puts page_article.row(1)[1] end
(2..page_article.last_row).each do |no_row| puts page_article.row(1)[0] end
(2..page_article.last_row).each do |no_row| puts page_article.row(1).column(1) end
(2..page_article.last_row).each do |no_row| Article.new(title: page_article.row(no_row) end
(2..page_article.last_row).each do |no_row| puts page_article.column(1) end
(2..page_article.last_row).each do |article| puts article end
(2..page_article.last_row).each do |article| puts article.column(1) end
(2..page_article.last_row).each do |article| puts article[3] end
(2..page_article.last_row).each do |article| puts article[2] end
(2..page_article.last_row).each do |article| puts article[1] end
(2..page_article.last_row).each do |article|
header_article = page_article.row(1)
spreadsheet.row(2)
spreadsheet.row(1)
page_article.row(1)
spreadsheet.sheet('Article')
spreadsheet
article
Comment.new
article
row
spreadsheet.row(i)
c
spreadsheet.row(i)
row
cheader
header
row
article
article.comment
comment
comments
article.comments.attributes
article.comments.all
article.comments
article.comment
row
cheader
crow = Hash [[cheader, spreadsheet.sheet(1).row(i)].transpose]
crow = Hash [[header, spreadsheet.sheet(1).row(i)].transpose]
crow = Hash [[header, spreadsheet.sheet(1).row(i)]]
c
spreadsheet.sheet(1).row(1)
spreadsheet.row(2)
cheader
c
row
c
cheader
c
row
cheader
c
comments
comment.attributes
crow
comment
c
article.attributes = row
article.attributes
article
c
article.attributes = row
article.attributes
article.attttributes
article.tributes
 row
c
spreadsheet.foreach('file') do |row| puts row.inspect end
file
spreadsheet.row(i).transpose
spreadsheet.row(i)
row.to_hash.slice("title", "content")
row.to_hash.slice(*accessible_attributes)
row.to_hash.slice
article.create
article.save
find_by_id(row["id"])
article
article.attributes
article attributes
article
row
header
spreadsheet
c
isi
article = new
article
c
article.save
article.attributes =  row.to_hash.select
article.attributes =  row.to_hash.select{ |k,v| allowed_attributes.include? k }
article.attributes =  Hash[isi, spreadsheet.row(2)]
article.attributes  Hash[isi, spreadsheet.row(2)]
article = new
isi = spreadsheet.sheet(0).row(2)
row = Hash[header, spreadsheet.row(1)]
header = spreadsheet.sheet(0).row(1)
spreadsheet = open_spreadsheet(file)
c
row.to_hash.select
article.attributes
article
article = new 
article
isi
row
header
spreadsheet
article = Hash[isi, spreadsheet.row(2)]
isi = spreadsheet.sheet(0).row(2)
isi = spreadsheet.sheet(0).row 2
row = Hash[header, spreadsheet.row(1)]
header = spreadsheet.sheet(0).row(1)
spreadsheet = open_spreadsheet(file)
c
article = Hash[new(spreadsheet.row(2))]
article = new(spreadsheet.row(2))
article.attributes
article.attributes = Hash[content, spreadsheet.row(2)]
spreadsheet.row(2)
spreadsheet.row(1)
spreadsheet.sheet(0).row(1)
content = spreadsheet.sheet(0).row(2)
article.attributes = spreadsheet.sheet(0).row(2)
article.attributes = spreadsheet.sheet.row(1)
article.attributes = sheet.row(1)
article.attributes
article.attributes = row.to_hash.slice("Title","Content", "Status")
article.attributes = row.to_hash.slice("Title, "Content", "Status")
row
article.attributes
article.attributes = row.to_hash.slice(*accessible_attributes)
article.attributes = row.to_hash.slice
article.attributes
article.attributes = row.to_hash.slice
article.attributes = row
article.attributes
article = new
article
row = Hash[header, spreadsheet.row(1)]
row = Hash[header, spreadsheet.row(0)]
article.attributes
row = Hash[header, spreadsheet.row(0)]
header = spreadsheet.sheet(0).row(1)
spreadsheet = open_spreadsheet(file)
spreadsheet
c
row
header
spreadsheet
article.each(id: 'ID', title: 'title') do |hash| puts hash.inspect end
row
article.each(id: 'ID', title: 'title') do |hash| puts hash.inspect end
sheet.each(id: 'ID', title: 'title') do |hash| puts hash.inspect end
sheet.each(id: 'ID', title: 'title') do |hash| puts hash.inspect;
sheet.each(id: 'ID', title: 'title') do |hash| puts hash.inspect
spreadsheet.sheet(0).row(2)
article.attributes = spreadsheet.sheet(0).row(2)
article.attributes
article.attributes = spreadsheet.sheet(0).row(2)
header = spreadsheet.sheet(0).row(1)
comment
spreadsheet.sheet(0).row(2)
spreadsheet.sheet(0).row(1)
spreadsheet.sheet(1).row(2)
article.attributes = spreadsheet.sheet(1).row(2)
article.attributes
row
article.attributes = spreadsheet.sheet(1).row(2)
spreadsheet.sheet(1).row(2)
article.attributes = row.to_hash.select
article.attributes
article.attributes = row.to_hash.select{ |k,V|}
article.attributes
article = new
article
article = find_by_id(row["id"])
row
row = Hash[header, spreadsheet.row(1)]
row
header = spreadsheet.sheet(1).row(1)
spreadsheet = open_spreadsheet(file)
header
file
spreadsheet
c
article.create!
article.save!
article.save
article = find_by_id(row["id"])
article
row
row = Hash[header, spreadsheet.row(1)]
row = Hash[[header, spreadsheet.row(1)]]
row
article = find_by_id(row["id"])
articlec= find_by_id(row["id"])
spreadsheet.row(1)
spreadsheet.row(1).trasnpose
spreadsheet.row(1)
row = Hash[[header, spreadsheet.sheet(1).row(0).transpose]]
row = Hash[[header, spreadsheet.row(0).transpose]]
row = Hash[[header, spreadsheet.row(1).transpose]]
header = spreadsheet.sheet(1).row(1)
header
row
spreadsheet.sheet(1).row(1)
spreadsheet = open_spreadsheet(file)
spreadsheet.sheet
c
spreadsheet.sheets
spreadsheet.info
